function saveFile(DATA, Filename, Path, NbDigits, isUI, writeComma)% function saveFile(DATA, Filename, Path, NbDigits, isUI, writeComma)% ************************************************************************% Simple function to save a 2D matrix in a path with a given filename% Output format is ascii text file%% INPUTS% - DATA        --> 2D matrix % - Filename    --> name of the file to write with its extension (usually .txt)       % - Path        --> path were to record file    % - NbDigits    --> number of digits for decimal point position% - isUI        --> display writing progression in the console% - writeComma  --> choose between writing comma (1) or points (0) for floating numbers%% HISTORY % *** 2011-09-09% Created by J.Chatel-Goldman @GIPSA Lab, jonas.chatel.goldman(at)gmail.comif(nargin < 3 || isempty(Path))    Filepath = Filename;            % If a path is not given, saves on the current directoryelse    Filepath = [Path Filename];endif (nargin < 4 || isempty(NbDigits))    NbDigits = 3;endif (nargin < 5 || isempty(isUI))    isUI = 0;endif (nargin < 6 || isempty(writeComma))    writeComma = 0;enddisp(['Writing file: ' Filename ' ...']); total_lines = size(DATA, 1);        % Total of lines in the file[fileId errorMsg] = fopen(Filepath, 'w+t');                 % Open/create the file to write ('w+') in text mode ('t')if(fileId == -1)   disp(errorMsg);end    for line = 1 : total_lines                      % For all the lines    if writeComma == 0        fprintf(fileId, ['%.' int2str(NbDigits) 'f\t'], DATA(line,:));   % Write the line        fprintf(fileId, '\n');                      % Line feed        elseif writeComma == 1     	data_with_comma = strrep(num2str(DATA(line,:),NbDigits),'.',',');        fprintf(fileId, '%s', data_with_comma);   % Write the line        fprintf(fileId, '\n');                      % Line feed     	end        if isUI && ~mod(line,500)         disp(['Writing file ' Filename ': ' int2str(100*line/total_lines) '%']);     end;end                                      fclose(fileId);      % Close the file